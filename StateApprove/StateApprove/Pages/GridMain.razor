@page "/gridmain"

@using System.Collections.Generic;

@inject IRoleService roleService
@inject IAboutService aboutService



<div class="row">
    <div class="col-6">

        <TelerikGrid Data=@GridData EditMode="@GridEditMode.Incell"
                     Height="500px"
                     Pageable="true" PageSize=@PageSize OnUpdate=@UpdateItem OnDelete=@DeleteItem OnCreate=@CreateItem
                     OnRowClick="@OnRowClickHandler"
                     SelectionMode="@GridSelectionMode.Single"
                     >
            
            <GridToolBar>
                <GridCommandButton Command="Add" Icon="add">Add Role</GridCommandButton>
            </GridToolBar>
            <GridColumns>
                <GridColumn Field=@nameof(Role.Name) Title="Approve Stage Details Name" />
                <GridColumn Field=@nameof(Role.Sequence) Title="Sequence" />
                <GridCommandColumn Title="Action">
                    <GridCommandButton Command="Delete" Icon="delete">Delete</GridCommandButton>
                </GridCommandColumn>
            </GridColumns>
        </TelerikGrid>
    </div>


    <div class="col-6">
        @*<TelerikGrid Data="@selectModel.AboutList" AutoGenerateColumns="true"
                         Pageable="true" PageSize="4" Width="700px">
         </TelerikGrid>*@



        <TelerikGrid Data="@selectModel.AboutList" EditMode="@GridEditMode.Incell"
                     Height="500px"
                     Pageable="true" PageSize=@PageSize AutoGenerateColumns="true" OnUpdate=@UpdateItemAbout OnDelete=@DeleteItemAbout OnCreate=@CreateItemAbout>
            <GridToolBar>
                <GridCommandButton Command="Add" Icon="add">Add About</GridCommandButton>
            </GridToolBar>
            <GridColumns>
             
                <GridCommandColumn Title="Action">
                    <GridCommandButton Command="Delete" Icon="delete">Delete</GridCommandButton>
                </GridCommandColumn>
            </GridColumns>
        </TelerikGrid>
     </div>

</div>


@code {


    int PageSize = 15;
    public List<Role>? GridData { get; set; }
    public List<About>? GridDataAbout { get; set; }
    List<Role> aboutList;

    Role selectModel;
    protected override void OnInitialized()
    {
        LoadData();
        LoadDataAbout();
        aboutList = new List<Role>();
        selectModel = new Role();
    }

    //Role

    private void LoadData()
    {
        GridData = roleService.GetRoles().ToList();

    }

    private void CreateItem(GridCommandEventArgs args)
    {
        roleService.CreateRole((Role)args.Item);
        LoadData();
    }

    private void DeleteItem(GridCommandEventArgs args)
    {
        roleService.DeleteRole((Role)args.Item);
        LoadData();
    }

    private void UpdateItem(GridCommandEventArgs args)
    {
        roleService.UpdateRole((Role)args.Item);
        LoadData();
    }


    //About


    private void LoadDataAbout()
    {
        GridDataAbout = aboutService.GetAbouts().ToList();
    }

    private void CreateItemAbout(GridCommandEventArgs args)
    {
        aboutService.CreateAbout((About)args.Item);
        LoadDataAbout();
    }

    private void DeleteItemAbout(GridCommandEventArgs args)
    {
        aboutService.DeleteAbout((About)args.Item);
        LoadDataAbout();
    }

    private void UpdateItemAbout(GridCommandEventArgs args)
    {
        aboutService.UpdateAbout((About)args.Item);
        LoadDataAbout();
    }

    void OnRowClickHandler(GridRowClickEventArgs args)
    {
        selectModel = args.Item as Role;
    }
}