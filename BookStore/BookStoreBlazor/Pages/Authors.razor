@page "/"
@page "/authors"

@*@inject IClient httpClient*@
@*@using System.Text.Json
@using System.Text.Json.Serialization
@inject IHttpClientFactory ClientFactory*@


@inject HttpClient httpClient;


@*<button class="btn btn-success" @onclick="GetAuthors">Get</button>
*@
@if (authors==null)
{
    <div class="alert alert-info">
        <h4> Loading Data...</h4>
    </div>
}
else
{
    <a class="btn btn-success" href="/authors/create"><span class="oi oi-plus" aria-hidden="true"></span>Create</a>
    <br />
    <table class="table table-responsive">
        <thead>
            <tr>
                <th>Id</th>
                <th>Name</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in authors)
            {
                <tr>
                    <td>@item.Id</td>
                    <td>@item.Name</td>
                    <td>
                        <a href="/authors/details">Details</a>
                        <a href="/authors/edit">Edit</a>
                        <a href="/authors/delete">Delete</a>

                    </td>
                </tr>
                
            }
        </tbody>
    </table>
}


@code {
    List<Author> authors = new List<Author>();

    //private async Task GetAuthors()
    //{
    //    authors = await httpClient.GetFromJsonAsync<List<Author>>("https://localhost:7239/api/authors");
    //}

    protected override async Task OnInitializedAsync()
    {
        await refreshList();
    }

    private async Task refreshList()
    {
        authors = await httpClient.GetFromJsonAsync<List<Author>>("https://localhost:7239/api/authors");

    }

    //public class AuthorCLass
    //{
    //    public int Id { get; set; }
    //    public string Name { get; set; }
    //}

    //private IEnumerable<AuthorCLass> authors = Array.Empty<AuthorCLass>();

    //private List<Author> authors;

    //protected override async Task OnInitializedAsync()
    //{
    //    authors = (await httpClient.AuthorsAllAsync()).ToList();
    //}

}
